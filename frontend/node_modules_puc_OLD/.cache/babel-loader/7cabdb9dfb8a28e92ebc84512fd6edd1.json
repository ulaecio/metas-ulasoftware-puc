{"ast":null,"code":"import _objectSpread from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import Chart from'react-apexcharts';import{getTokenData}from'utils/auth';import{BASE_URL,requestBackend}from'../../utils/request';import*as ReactBootStrap from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BarChartRota=function BarChartRota(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({labels:{categories:[]},series:[{name:\"\",data:[]}]}),_useState4=_slicedToArray(_useState3,2),chartData=_useState4[0],setChartData=_useState4[1];useEffect(function(){var _getTokenData;requestBackend({url:\"\".concat(BASE_URL,\"/vendas/venda-tipo-bebida?rota=\").concat((_getTokenData=getTokenData())===null||_getTokenData===void 0?void 0:_getTokenData.user_name),withCredentials:true}).then(function(response){setLoading(true);var data=response.data;var myLabels=data.map(function(x){return x.tipo_bebida;});var mySeries=data.map(function(x){return x.qtde_venda;});setChartData({labels:{categories:myLabels},series:[{name:\"Venda\",data:mySeries}]});});},[]);var options={plotOptions:{bar:{horizontal:true}}};return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/ // @ts-ignore\n_jsx(Chart,{options:_objectSpread(_objectSpread({},options),{},{xaxis:chartData.labels}),series:chartData.series,type:\"bar\",height:\"240\"}):/*#__PURE__*/_jsx(\"div\",{className:\"display-flex \",children:/*#__PURE__*/_jsx(ReactBootStrap.Spinner,{className:\"spinner card\",animation:\"border\",variant:\"warning\",role:\"status ml\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})})});};export default BarChartRota;","map":{"version":3,"sources":["C:/workspace/ws-sts/ulasoftware-metas/frontend/src/components/BarChatRota/index.tsx"],"names":["useEffect","useState","Chart","getTokenData","BASE_URL","requestBackend","ReactBootStrap","BarChartRota","loading","setLoading","labels","categories","series","name","data","chartData","setChartData","url","user_name","withCredentials","then","response","myLabels","map","x","tipo_bebida","mySeries","qtde_venda","options","plotOptions","bar","horizontal","xaxis"],"mappings":"yUAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,OAASC,YAAT,KAA6B,YAA7B,CAEA,OAASC,QAAT,CAAmBC,cAAnB,KAAyC,qBAAzC,CACA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,iBAAhC,C,gGAaA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACON,QAAQ,CAAC,KAAD,CADf,wCAChBO,OADgB,eACPC,UADO,8BAEWR,QAAQ,CAAY,CAClDS,MAAM,CAAE,CACJC,UAAU,CAAE,EADR,CAD0C,CAIlDC,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,EADV,CAEIC,IAAI,CAAE,EAFV,CADI,CAJ0C,CAAZ,CAFnB,yCAEhBC,SAFgB,eAELC,YAFK,eAcvBhB,SAAS,CAAC,UAAM,mBACZK,cAAc,CAAC,CACXY,GAAG,WACIb,QADJ,0DAC8CD,YAAY,EAD1D,wCAC8C,cAAgBe,SAD9D,CADQ,CAGXC,eAAe,CAAE,IAHN,CAAD,CAAd,CAKKC,IALL,CAKU,SAACC,QAAD,CAAc,CAChBZ,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMK,CAAAA,IAAI,CAAGO,QAAQ,CAACP,IAAtB,CACA,GAAMQ,CAAAA,QAAQ,CAAGR,IAAI,CAACS,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,WAAN,EAAV,CAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAGZ,IAAI,CAACS,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACG,UAAN,EAAV,CAAjB,CACAX,YAAY,CAAC,CACTN,MAAM,CAAE,CACJC,UAAU,CAAEW,QADR,CADC,CAITV,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,OADV,CAEIC,IAAI,CAAEY,QAFV,CADI,CAJC,CAAD,CAAZ,CAWH,CAtBL,EAuBH,CAxBQ,CAwBN,EAxBM,CAAT,CAyBA,GAAME,CAAAA,OAAO,CAAG,CACZC,WAAW,CAAE,CACTC,GAAG,CAAE,CACDC,UAAU,CAAE,IADX,CADI,CADD,CAAhB,CAQA,mBAAQ,yBACPvB,OAAO,eACJ;AACA,KAAC,KAAD,EACA,OAAO,gCAAOoB,OAAP,MAAgBI,KAAK,CAAEjB,SAAS,CAACL,MAAjC,EADP,CAEA,MAAM,CAAEK,SAAS,CAACH,MAFlB,CAGA,IAAI,CAAC,KAHL,CAIA,MAAM,CAAC,KAJP,EAFI,cASJ,YAAK,SAAS,CAAC,eAAf,uBACA,KAAC,cAAD,CAAgB,OAAhB,EAAwB,SAAS,CAAC,cAAlC,CAAiD,SAAS,CAAC,QAA3D,CAAoE,OAAO,CAAC,SAA5E,CAAsF,IAAI,CAAC,WAA3F,uBACI,aAAM,SAAS,CAAC,iBAAhB,wBADJ,EADA,EAVI,EAAR,CAmBH,CAlED,CAoEA,cAAeL,CAAAA,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { getTokenData } from 'utils/auth';\r\nimport { vendasTipoBebida } from '../../types/sales';\r\nimport { BASE_URL, requestBackend } from '../../utils/request';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\ntype Seriesdata = {\r\n    name: string;\r\n    data: number[];\r\n}\r\ntype Chartdata = {\r\n    labels: {\r\n        categories: String[];\r\n    };\r\n    series: Seriesdata[];\r\n}\r\n\r\nconst BarChartRota = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [chartData, setChartData] = useState<Chartdata>({\r\n        labels: {\r\n            categories: []\r\n        },\r\n        series: [\r\n            {\r\n                name: \"\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n\r\n    useEffect(() => {\r\n        requestBackend({\r\n            url:\r\n                `${BASE_URL}/vendas/venda-tipo-bebida?rota=${getTokenData()?.user_name}`,\r\n            withCredentials: true\r\n        })\r\n            .then((response) => {\r\n                setLoading(true);\r\n\r\n                const data = response.data as vendasTipoBebida[];\r\n                const myLabels = data.map(x => x.tipo_bebida)\r\n                const mySeries = data.map(x => x.qtde_venda);\r\n                setChartData({\r\n                    labels: {\r\n                        categories: myLabels\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: \"Venda\",\r\n                            data: mySeries\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n    }, []);\r\n    const options = {\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            }\r\n        },\r\n    };\r\n\r\n    return (<>\r\n    {loading ? (\r\n        // @ts-ignore\r\n        <Chart\r\n        options={{ ...options, xaxis: chartData.labels }}\r\n        series={chartData.series}\r\n        type=\"bar\"\r\n        height=\"240\"\r\n    />\r\n    ) : (\r\n        <div className='display-flex '>\r\n        <ReactBootStrap.Spinner className='spinner card' animation='border' variant='warning' role='status ml'>\r\n            <span className='visually-hidden'>Loading...</span>\r\n        </ReactBootStrap.Spinner>\r\n    </div>\r\n    )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BarChartRota;"]},"metadata":{},"sourceType":"module"}