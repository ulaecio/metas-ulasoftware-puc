{"ast":null,"code":"var _process$env$REACT_AP, _process$env$REACT_AP2;\n\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport history from './history';\nimport { getAuthData } from './storage';\nexport const BASE_URL = `http://${'localhost'}:8080`; //export const BASE_URL = process.env.REACT_APP_BACKEND_URL ?? 'https://ulasoftware-metas-bee63543f5ed.herokuapp.com';\n\nconst CLIENT_ID = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'metaspuc';\nconst CLIENT_SECRET = (_process$env$REACT_AP2 = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : 'metaspuc123';\nexport const requestBackendLogin = loginData => {\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    Authorization: 'Basic ' + window.btoa(CLIENT_ID + ':' + CLIENT_SECRET)\n  };\n  const data = qs.stringify({ ...loginData,\n    grant_type: 'password'\n  });\n  return axios({\n    method: 'POST',\n    baseURL: BASE_URL,\n    url: '/oauth/token',\n    data,\n    headers\n  });\n};\nexport const requestBackend = config => {\n  const headers = config.withCredentials ? { ...config.headers,\n    Authorization: \"Bearer \" + getAuthData().access_token\n  } : config.headers;\n  return axios({ ...config,\n    baseURL: BASE_URL,\n    headers\n  });\n}; // Add a request interceptor\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401\n  /*  || error.response.status === 403  */\n  ) {\n      history.push('/auth/login');\n    }\n\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["C:/workspace/ws-sts/metas-ulasoftware-puc/frontend/src/utils/request.ts"],"names":["axios","qs","history","getAuthData","BASE_URL","CLIENT_ID","process","env","REACT_APP_BACKEND_URL","CLIENT_SECRET","requestBackendLogin","loginData","headers","Authorization","window","btoa","data","stringify","grant_type","method","baseURL","url","requestBackend","config","withCredentials","access_token","interceptors","response","use","error","status","push","Promise","reject"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA2B,WAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAI,UAAS,WAAY,OAAvC,C,CAEP;;AAEA,MAAMC,SAAS,4BAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAf,yEAAwC,UAAvD;AACA,MAAMC,aAAa,6BAAGH,OAAO,CAACC,GAAR,CAAYC,qBAAf,2EAAwC,aAA3D;AAMA,OAAO,MAAME,mBAAmB,GAAIC,SAAD,IAA0B;AACzD,QAAMC,OAAO,GAAG;AACZ,oBAAgB,mCADJ;AAEZC,IAAAA,aAAa,EAAE,WAAWC,MAAM,CAACC,IAAP,CAAYV,SAAS,GAAG,GAAZ,GAAkBI,aAA9B;AAFd,GAAhB;AAKA,QAAMO,IAAI,GAAGf,EAAE,CAACgB,SAAH,CAAa,EACtB,GAAGN,SADmB;AAEtBO,IAAAA,UAAU,EAAE;AAFU,GAAb,CAAb;AAKA,SAAOlB,KAAK,CAAC;AAAEmB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAEhB,QAA3B;AAAqCiB,IAAAA,GAAG,EAAE,cAA1C;AAA0DL,IAAAA,IAA1D;AAAgEJ,IAAAA;AAAhE,GAAD,CAAZ;AACH,CAZM;AAcP,OAAO,MAAMU,cAAc,GAAIC,MAAD,IAAgC;AAC1D,QAAMX,OAAO,GAAGW,MAAM,CAACC,eAAP,GACV,EACE,GAAGD,MAAM,CAACX,OADZ;AAEEC,IAAAA,aAAa,EAAE,YAAYV,WAAW,GAAGsB;AAF3C,GADU,GAKVF,MAAM,CAACX,OALb;AAOA,SAAOZ,KAAK,CAAC,EAAE,GAAGuB,MAAL;AAAaH,IAAAA,OAAO,EAAEhB,QAAtB;AAAgCQ,IAAAA;AAAhC,GAAD,CAAZ;AACH,CATM,C,CAWP;;AACAZ,KAAK,CAAC0B,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAChD,SAAOA,QAAP;AACH,CAFD,EAEG,UAAUE,KAAV,EAAiB;AAChB,MAAIA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B;AAAI;AAAlC,IAA4E;AACxE5B,MAAAA,OAAO,CAAC6B,IAAR,CAAa,aAAb;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAPD","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\r\nimport qs from \"qs\";\r\nimport history from './history';\r\nimport { getAuthData} from './storage'\r\n\r\nexport const BASE_URL = `http://${'localhost'}:8080`;\r\n\r\n//export const BASE_URL = process.env.REACT_APP_BACKEND_URL ?? 'https://ulasoftware-metas-bee63543f5ed.herokuapp.com';\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_BACKEND_URL ?? 'metaspuc';\r\nconst CLIENT_SECRET = process.env.REACT_APP_BACKEND_URL ?? 'metaspuc123';\r\n\r\ntype LoginData = {\r\n    username: string;\r\n    password: string;\r\n}\r\nexport const requestBackendLogin = (loginData: LoginData) => {\r\n    const headers = {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: 'Basic ' + window.btoa(CLIENT_ID + ':' + CLIENT_SECRET),\r\n    };\r\n\r\n    const data = qs.stringify({\r\n        ...loginData,\r\n        grant_type: 'password',\r\n    });\r\n\r\n    return axios({ method: 'POST', baseURL: BASE_URL, url: '/oauth/token', data, headers, })\r\n}\r\n\r\nexport const requestBackend = (config: AxiosRequestConfig) => {\r\n    const headers = config.withCredentials\r\n        ? {\r\n            ...config.headers,\r\n            Authorization: \"Bearer \" + getAuthData().access_token,\r\n        }\r\n        : config.headers;\r\n\r\n    return axios({ ...config, baseURL: BASE_URL, headers });\r\n}\r\n\r\n// Add a request interceptor\r\naxios.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    if (error.response.status === 401 /*  || error.response.status === 403  */) {\r\n        history.push('/auth/login');\r\n    }\r\n    return Promise.reject(error);\r\n});"]},"metadata":{},"sourceType":"module"}