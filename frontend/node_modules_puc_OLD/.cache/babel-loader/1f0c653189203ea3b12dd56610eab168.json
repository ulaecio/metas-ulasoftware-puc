{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\ws-sts\\\\metas-ulasoftware-puc\\\\frontend\\\\src\\\\components\\\\BarChatRotaFamilia\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { getTokenData } from 'utils/auth';\nimport { getAuthData } from 'utils/storage';\nimport { BASE_URL } from '../../utils/request';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BarChartRotaFamilia = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    var _getTokenData;\n\n    axios.get(`${BASE_URL}/vendas/volume-tipo-bebida?rota=${(_getTokenData = getTokenData()) === null || _getTokenData === void 0 ? void 0 : _getTokenData.user_name}`, {\n      headers: {\n        Authorization: \"Bearer \" + getAuthData().access_token\n      }\n    }).then(response => {\n      setLoading(true);\n      const data = response.data;\n      const myLabels = data.map(x => x.tipo_bebida);\n      const mySeries = data.map(x => x.qtde_venda);\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"Volume\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ?\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(Chart, {\n      options: { ...options,\n        xaxis: chartData.labels\n      },\n      series: chartData.series,\n      type: \"bar\",\n      height: \"240\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-flex \",\n      children: /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n        className: \"spinner\",\n        animation: \"border\",\n        variant: \"warning\",\n        role: \"status ml\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n};\n\n_s(BarChartRotaFamilia, \"PCiyIC4ZNF0wSEZ2UcPI7E7fsdg=\");\n\n_c = BarChartRotaFamilia;\nexport default BarChartRotaFamilia;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartRotaFamilia\");","map":{"version":3,"sources":["C:/workspace/ws-sts/metas-ulasoftware-puc/frontend/src/components/BarChatRotaFamilia/index.tsx"],"names":["axios","useEffect","useState","Chart","getTokenData","getAuthData","BASE_URL","ReactBootStrap","BarChartRotaFamilia","loading","setLoading","chartData","setChartData","labels","categories","series","name","data","get","user_name","headers","Authorization","access_token","then","response","myLabels","map","x","tipo_bebida","mySeries","qtde_venda","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;;;AAaA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAY;AAClDW,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KAD0C;AAIlDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI;AAJ0C,GAAZ,CAA1C;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZD,IAAAA,KAAK,CAACkB,GAAN,CAAW,GAAEZ,QAAS,mCAAZ,iBAA8CF,YAAY,EAA1D,kDAA8C,cAAgBe,SAAU,EAAlF,EAAqF;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYhB,WAAW,GAAGiB;AAA3C;AAAX,KAArF,EACKC,IADL,CACWC,QAAD,IAAc;AAChBd,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAMO,IAAI,GAAGO,QAAQ,CAACP,IAAtB;AACA,YAAMQ,QAAQ,GAAGR,IAAI,CAACS,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,WAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGZ,IAAI,CAACS,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,UAAhB,CAAjB;AAEAlB,MAAAA,YAAY,CAAC;AACTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAEW;AADR,SADC;AAITV,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,QADV;AAEIC,UAAAA,IAAI,EAAEY;AAFV,SADI;AAJC,OAAD,CAAZ;AAWH,KAnBL;AAoBH,GArBQ,EAqBN,EArBM,CAAT;AAsBA,QAAME,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AAQA,sBACI;AAAA,cAEQzB,OAAO;AAAA;AACH;AACA,YAAC,KAAD;AACI,MAAA,OAAO,EAAE,EACL,GAAGsB,OADE;AACOI,QAAAA,KAAK,EAAExB,SAAS,CAACE;AADxB,OADb;AAII,MAAA,MAAM,EAAEF,SAAS,CAACI,MAJtB;AAKI,MAAA,IAAI,EAAC,KALT;AAMI,MAAA,MAAM,EAAC;AANX;AAAA;AAAA;AAAA;AAAA,YAFG,gBAWH;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI,QAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,SAAS,EAAC,SAAlC;AAA4C,QAAA,SAAS,EAAC,QAAtD;AAA+D,QAAA,OAAO,EAAC,SAAvE;AAAiF,QAAA,IAAI,EAAC,WAAtF;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAbZ,mBADJ;AAsBH,CAlED;;GAAMP,mB;;KAAAA,mB;AAoEN,eAAeA,mBAAf","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { getTokenData } from 'utils/auth';\r\nimport { getAuthData } from 'utils/storage';\r\nimport { vendasTipoBebida } from '../../types/sales';\r\nimport { BASE_URL } from '../../utils/request';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\ntype Seriesdata = {\r\n    name: string;\r\n    data: number[];\r\n}\r\ntype Chartdata = {\r\n    labels: {\r\n        categories: String[];\r\n    };\r\n    series: Seriesdata[];\r\n}\r\n\r\nconst BarChartRotaFamilia = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [chartData, setChartData] = useState<Chartdata>({\r\n        labels: {\r\n            categories: []\r\n        },\r\n        series: [\r\n            {\r\n                name: \"\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    \r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/vendas/volume-tipo-bebida?rota=${getTokenData()?.user_name}`, { headers: { Authorization: \"Bearer \" + getAuthData().access_token } })\r\n            .then((response) => {\r\n                setLoading(true);\r\n\r\n                const data = response.data as vendasTipoBebida[];\r\n                const myLabels = data.map(x => x.tipo_bebida)\r\n                const mySeries = data.map(x => x.qtde_venda);\r\n\r\n                setChartData({\r\n                    labels: {\r\n                        categories: myLabels\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: \"Volume\",\r\n                            data: mySeries\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n    }, []);\r\n    const options = {\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? (\r\n                    // @ts-ignore\r\n                    <Chart\r\n                        options={{\r\n                            ...options, xaxis: chartData.labels\r\n                        }}\r\n                        series={chartData.series}\r\n                        type=\"bar\"\r\n                        height=\"240\"\r\n                    />\r\n                ) : (\r\n                    <div className='display-flex '>\r\n                        <ReactBootStrap.Spinner className='spinner' animation='border' variant='warning' role='status ml'>\r\n                            <span className='visually-hidden'>Loading...</span>\r\n                        </ReactBootStrap.Spinner>\r\n                    </div>\r\n                )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BarChartRotaFamilia;\r\n"]},"metadata":{},"sourceType":"module"}