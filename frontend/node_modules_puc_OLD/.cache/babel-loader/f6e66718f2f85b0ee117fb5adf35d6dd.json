{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\ws-sts\\\\metas-ulasoftware-puc\\\\frontend\\\\src\\\\pages\\\\Catalog\\\\components\\\\Pagination\\\\index.tsx\";\nimport React from \"react\";\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!core/assets/images/arrow.svg\";\nimport \"./styles.scss\";\nimport { generateList } from \"../../../../core/utils/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  totalPages,\n  activePage,\n  onChange\n}) => {\n  const items = generateList(totalPages);\n  const previousClass = totalPages > 0 && activePage > 0 ? 'page-active' : 'page-inactive';\n  const nextClass = activePage + 1 < totalPages ? 'page-active' : 'page-inactive';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-container\",\n    children: [/*#__PURE__*/_jsxDEV(ArrowIcon, {\n      className: `pagination-previous ${previousClass}`,\n      onClick: () => onChange(activePage - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `pagination-item ${item === activePage ? 'active' : ''}`,\n      onClick: () => onChange(item),\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(ArrowIcon, {\n      className: `pagination-next ${nextClass}`,\n      onClick: () => onChange(activePage + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/workspace/ws-sts/metas-ulasoftware-puc/frontend/src/pages/Catalog/components/Pagination/index.tsx"],"names":["React","generateList","Pagination","totalPages","activePage","onChange","items","previousClass","nextClass","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AAQA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAD,KAAiD;AACpE,QAAMC,KAAK,GAAGL,YAAY,CAAEE,UAAF,CAA1B;AACA,QAAMI,aAAa,GAAGJ,UAAU,GAAG,CAAb,IAAkBC,UAAU,GAAG,CAA/B,GAAmC,aAAnC,GAAmD,eAAzE;AACA,QAAMI,SAAS,GAAKJ,UAAU,GAAE,CAAd,GAAoBD,UAApB,GAAiC,aAAjC,GAAiD,eAAnE;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,SAAS,EAAG,uBAAsBI,aAAc,EADlD;AAEE,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACD,UAAU,GAAE,CAAb;AAFzB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGE,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT;AAEC,MAAA,SAAS,EAAG,mBAAkBA,IAAI,KAAKN,UAAT,GAAsB,QAAtB,GAAiC,EAAG,EAFnE;AAGC,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACK,IAAD,CAHxB;AAAA,gBAKGA;AALH,OACMA,IADN;AAAA;AAAA;AAAA;AAAA,YADD,CALH,eAcE,QAAC,SAAD;AACE,MAAA,SAAS,EAAG,mBAAkBF,SAAU,EAD1C;AAEE,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACD,UAAU,GAAE,CAAb;AAFzB;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1BD;;KAAMF,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { ReactComponent as ArrowIcon } from \"core/assets/images/arrow.svg\";\r\nimport \"./styles.scss\";\r\nimport { generateList } from \"../../../../core/utils/list\";\r\n\r\ntype Props = {\r\n    totalPages: number;\r\n    activePage: number;\r\n    onChange: (item: number) => void;\r\n}\r\n\r\nconst Pagination = ({ totalPages, activePage, onChange }: Props) => {\r\nconst items = generateList( totalPages );\r\nconst previousClass = totalPages > 0 && activePage > 0 ? 'page-active' : 'page-inactive';\r\nconst nextClass = ( activePage +1 ) < totalPages ? 'page-active' : 'page-inactive';\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <ArrowIcon \r\n        className={`pagination-previous ${previousClass}`}\r\n        onClick={() => onChange(activePage -1)}\r\n        />\r\n      {items.map((item) => (\r\n        <div \r\n         key={item}\r\n         className={`pagination-item ${item === activePage ? 'active' : ''}`}\r\n         onClick={() => onChange(item)}\r\n         >\r\n          {item }\r\n        </div>\r\n      ))}\r\n      <ArrowIcon \r\n        className={`pagination-next ${nextClass}`}\r\n        onClick={() => onChange(activePage +1)}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}