{"ast":null,"code":"import _objectSpread from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Chart from'react-apexcharts';import{useEffect,useState}from'react';import{BASE_URL}from'../../utils/request';import axios from'axios';import{getAuthData}from'utils/storage';import{jsx as _jsx}from\"react/jsx-runtime\";var BarChartSetor=function BarChartSetor(){var _useState=useState({labels:{categories:[]},series:[{name:\"\",data:[]}]}),_useState2=_slicedToArray(_useState,2),chartData=_useState2[0],setChartData=_useState2[1];useEffect(function(){axios.get(\"\".concat(BASE_URL,\"/vendas/total-vendas-familia\"),{headers:{Authorization:\"Bearer \"+getAuthData().access_token}}).then(function(response){var data=response.data;var myLabels=data.map(function(x){return x.familia;});var mySeries=data.map(function(x){return x.total_venda;});setChartData({labels:{categories:myLabels},series:[{name:\"Vendas\",data:mySeries}]});});},[]);var options={plotOptions:{bar:{horizontal:true}}};return/*#__PURE__*/ (// @ts-ignore\n_jsx(Chart,{options:_objectSpread(_objectSpread({},options),{},{xaxis:chartData.labels}),series:chartData.series,type:\"bar\",height:\"240\"}));};export default BarChartSetor;","map":{"version":3,"sources":["C:/workspace/ws-sts/ulasoftware-metas/frontend/src/components/BarChatSetor/index.tsx"],"names":["Chart","useEffect","useState","BASE_URL","axios","getAuthData","BarChartSetor","labels","categories","series","name","data","chartData","setChartData","get","headers","Authorization","access_token","then","response","myLabels","map","x","familia","mySeries","total_venda","options","plotOptions","bar","horizontal","xaxis"],"mappings":"yUAAI,MAAOA,CAAAA,KAAP,KAAkB,kBAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,C,2CAaA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,eACUJ,QAAQ,CAAY,CAClDK,MAAM,CAAE,CACJC,UAAU,CAAE,EADR,CAD0C,CAIlDC,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,EADV,CAEIC,IAAI,CAAE,EAFV,CADI,CAJ0C,CAAZ,CADlB,wCACjBC,SADiB,eACNC,YADM,eAaxBZ,SAAS,CAAC,UAAM,CACZG,KAAK,CAACU,GAAN,WAAaX,QAAb,iCAAqD,CAACY,OAAO,CAAE,CAACC,aAAa,CAAE,UAAYX,WAAW,GAAGY,YAA1C,CAAV,CAArD,EACKC,IADL,CACU,SAACC,QAAD,CAAc,CAChB,GAAMR,CAAAA,IAAI,CAAGQ,QAAQ,CAACR,IAAtB,CACA,GAAMS,CAAAA,QAAQ,CAAGT,IAAI,CAACU,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,OAAN,EAAV,CAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAGb,IAAI,CAACU,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACG,WAAN,EAAV,CAAjB,CAEAZ,YAAY,CAAC,CACTN,MAAM,CAAE,CACJC,UAAU,CAAEY,QADR,CADC,CAITX,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,QADV,CAEIC,IAAI,CAAEa,QAFV,CADI,CAJC,CAAD,CAAZ,CAWH,CAjBL,EAkBH,CAnBQ,CAmBN,EAnBM,CAAT,CAoBA,GAAME,CAAAA,OAAO,CAAG,CACZC,WAAW,CAAE,CACTC,GAAG,CAAE,CACDC,UAAU,CAAE,IADX,CADI,CADD,CAAhB,CAQA,oBACI;AACA,KAAC,KAAD,EACI,OAAO,gCAAOH,OAAP,MAAgBI,KAAK,CAAElB,SAAS,CAACL,MAAjC,EADX,CAEI,MAAM,CAAEK,SAAS,CAACH,MAFtB,CAGI,IAAI,CAAC,KAHT,CAII,MAAM,CAAC,KAJX,EAFJ,EASH,CAlDD,CAoDJ,cAAeH,CAAAA,aAAf","sourcesContent":["    import Chart from 'react-apexcharts';\r\n    import { useEffect, useState } from 'react';\r\n    import { VendaTotalPorFamilia } from '../../types/sales';\r\n    import { BASE_URL } from '../../utils/request';\r\n    import axios from 'axios';\r\n    import { getAuthData } from 'utils/storage';\r\n    \r\n    type Seriesdata = {\r\n        name: string;\r\n        data: number[];\r\n    }\r\n    type Chartdata = {\r\n        labels: {\r\n            categories: String[];\r\n        };\r\n        series: Seriesdata[];\r\n    }\r\n    \r\n    const BarChartSetor = () => {\r\n        const [chartData, setChartData] = useState<Chartdata>({\r\n            labels: {\r\n                categories: []\r\n            },\r\n            series: [\r\n                {\r\n                    name: \"\",\r\n                    data: []\r\n                }\r\n            ]\r\n        });\r\n    \r\n        useEffect(() => {\r\n            axios.get(`${BASE_URL}/vendas/total-vendas-familia`, {headers: {Authorization: \"Bearer \" + getAuthData().access_token }})\r\n                .then((response) => {\r\n                    const data = response.data as VendaTotalPorFamilia[];\r\n                    const myLabels = data.map(x => x.familia)\r\n                    const mySeries = data.map(x => x.total_venda);\r\n    \r\n                    setChartData({\r\n                        labels: {\r\n                            categories: myLabels\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: \"Vendas\",\r\n                                data: mySeries\r\n                            }\r\n                        ]\r\n                    });\r\n                });\r\n        }, []);\r\n        const options = {\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                }\r\n            },\r\n        };\r\n    \r\n        return (\r\n            // @ts-ignore\r\n            <Chart\r\n                options={{ ...options, xaxis: chartData.labels }}\r\n                series={chartData.series}\r\n                type=\"bar\"\r\n                height=\"240\"\r\n            />\r\n        );\r\n    }\r\n\r\nexport default BarChartSetor;\r\n"]},"metadata":{},"sourceType":"module"}