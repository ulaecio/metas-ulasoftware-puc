{"ast":null,"code":"import _slicedToArray from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{useState,useEffect}from\"react\";import{isAuthenticated,getTokenData}from\"../../../utils/auth\";import{BASE_URL}from\"../../../utils/request\";import{getAuthData}from\"../../../utils/storage\";import{formatPrice}from\"../../../utils/format\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OutrosRealizado=function OutrosRealizado(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),metaOutrosRealizado=_useState2[0],setOutrosRealizado=_useState2[1];useEffect(function(){if(isAuthenticated()){var _getTokenData;axios.get(\"\".concat(BASE_URL,\"/vendas/vendas-paginada-por-tipodebebida?rota=\").concat((_getTokenData=getTokenData())===null||_getTokenData===void 0?void 0:_getTokenData.user_name),{headers:{Authorization:\"Bearer \"+getAuthData().access_token}}).then(function(response){setOutrosRealizado(response.data);});};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-wrap justify-content-center\",children:metaOutrosRealizado===null||metaOutrosRealizado===void 0?void 0:metaOutrosRealizado.content.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"card-body \",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card text-primary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-header mb-3 text-white bg-quarter\",children:item.tipo_bebida}),/*#__PURE__*/_jsxs(\"span\",{className:\"dropdown-item-text text-secondary\",children:[\"Realizado \",/*#__PURE__*/_jsx(\"br\",{}),\" acumulado\",/*#__PURE__*/_jsx(\"h5\",{className:\"text-secondary\",children:formatPrice(item.qtde_venda)})]})]})},item.qtde_venda);})});};export default OutrosRealizado;","map":{"version":3,"sources":["C:/workspace/ws-sts/ulasoftware-metas/frontend/src/components/Metas/OutrosRealizado/index.tsx"],"names":["axios","useState","useEffect","isAuthenticated","getTokenData","BASE_URL","getAuthData","formatPrice","OutrosRealizado","metaOutrosRealizado","setOutrosRealizado","get","user_name","headers","Authorization","access_token","then","response","data","content","map","item","tipo_bebida","qtde_venda"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAGA,OAASC,eAAT,CAA0BC,YAA1B,KAA8C,qBAA9C,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,WAAT,KAA4B,uBAA5B,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,eAEwBP,QAAQ,EAFhC,wCAEnBQ,mBAFmB,eAEEC,kBAFF,eAI1BR,SAAS,CAAC,UAAM,CACZ,GAAIC,eAAe,EAAnB,CAAuB,mBACnBH,KAAK,CAACW,GAAN,WAAaN,QAAb,yEAAsED,YAAY,EAAlF,wCAAsE,cAAgBQ,SAAtF,EACI,CAAEC,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAYR,WAAW,GAAGS,YAA3C,CAAX,CADJ,EAEKC,IAFL,CAEU,SAACC,QAAD,CAAc,CAChBP,kBAAkB,CAACO,QAAQ,CAACC,IAAV,CAAlB,CACH,CAJL,EAKH,EACJ,CARQ,CAQN,EARM,CAAT,CAUA,mBACQ,YAAK,SAAS,CAAC,yCAAf,UAEQT,mBAFR,SAEQA,mBAFR,iBAEQA,mBAAmB,CAAEU,OAArB,CAA6BC,GAA7B,CACK,SAAAC,IAAI,qBAEG,YAA8B,SAAS,CAAC,YAAxC,uBACI,aAAK,SAAS,CAAC,mBAAf,wBAAmC,aAAM,SAAS,CAAC,wCAAhB,UAA0DA,IAAI,CAACC,WAA/D,EAAnC,cACI,cAAM,SAAS,CAAC,mCAAhB,qCAA8D,aAA9D,2BAA8E,WAAI,SAAS,CAAC,gBAAd,UAAgCf,WAAW,CAACc,IAAI,CAACE,UAAN,CAA3C,EAA9E,GADJ,GADJ,EAAaF,IAAI,CAACE,UAAlB,CAFH,EADT,CAFR,EADR,CAeH,CA7BD,CA8BA,cAAef,CAAAA,eAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { vendasTipoBebida } from \"../../../types/sales\";\r\nimport { springPage } from \"../../../types/vendor/springPage\";\r\nimport { isAuthenticated, getTokenData } from \"../../../utils/auth\";\r\nimport { BASE_URL } from \"../../../utils/request\";\r\nimport { getAuthData } from \"../../../utils/storage\";\r\nimport { formatPrice } from \"../../../utils/format\";\r\n\r\nconst OutrosRealizado = () => {\r\n\r\n    const [metaOutrosRealizado, setOutrosRealizado] = useState<springPage<vendasTipoBebida>>();\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            axios.get(`${BASE_URL}/vendas/vendas-paginada-por-tipodebebida?rota=${getTokenData()?.user_name}`,\r\n                { headers: { Authorization: \"Bearer \" + getAuthData().access_token } })\r\n                .then((response) => {\r\n                    setOutrosRealizado(response.data);\r\n                })\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n            <div className=\"d-flex flex-wrap justify-content-center\">\r\n                {\r\n                    metaOutrosRealizado?.content.map\r\n                        (item =>\r\n\r\n                                <div  key = {item.qtde_venda} className=\"card-body \">\r\n                                    <div className=\"card text-primary\"><span className=\"card-header mb-3 text-white bg-quarter\">{item.tipo_bebida}</span>\r\n                                        <span className=\"dropdown-item-text text-secondary\">Realizado <br /> acumulado<h5 className=\"text-secondary\">{formatPrice(item.qtde_venda)}</h5></span>\r\n                                    </div>\r\n                                </div>\r\n                        )\r\n                }\r\n            </div>\r\n    )\r\n}\r\nexport default OutrosRealizado;\r\n\r\n"]},"metadata":{},"sourceType":"module"}