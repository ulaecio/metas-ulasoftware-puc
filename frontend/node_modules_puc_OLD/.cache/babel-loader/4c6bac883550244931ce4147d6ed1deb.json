{"ast":null,"code":"import _objectSpread from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/workspace/ws-sts/ulasoftware-metas/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import{useEffect,useState}from'react';import Chart from'react-apexcharts';import{getTokenData}from'utils/auth';import{getAuthData}from'utils/storage';import{BASE_URL}from'../../utils/request';import*as ReactBootStrap from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BarChartRotaFamilia=function BarChartRotaFamilia(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({labels:{categories:[]},series:[{name:\"\",data:[]}]}),_useState4=_slicedToArray(_useState3,2),chartData=_useState4[0],setChartData=_useState4[1];useEffect(function(){var _getTokenData;axios.get(\"\".concat(BASE_URL,\"/vendas/volume-tipo-bebida?rota=\").concat((_getTokenData=getTokenData())===null||_getTokenData===void 0?void 0:_getTokenData.user_name),{headers:{Authorization:\"Bearer \"+getAuthData().access_token}}).then(function(response){setLoading(true);var data=response.data;var myLabels=data.map(function(x){return x.tipo_bebida;});var mySeries=data.map(function(x){return x.qtde_venda;});setChartData({labels:{categories:myLabels},series:[{name:\"Volume\",data:mySeries}]});});},[]);var options={plotOptions:{bar:{horizontal:true}}};return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/ // @ts-ignore\n_jsx(Chart,{options:_objectSpread(_objectSpread({},options),{},{xaxis:chartData.labels}),series:chartData.series,type:\"bar\",height:\"240\"}):/*#__PURE__*/_jsx(\"div\",{className:\"display-flex \",children:/*#__PURE__*/_jsx(ReactBootStrap.Spinner,{className:\"spinner\",animation:\"border\",variant:\"warning\",role:\"status ml\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})})});};export default BarChartRotaFamilia;","map":{"version":3,"sources":["C:/workspace/ws-sts/ulasoftware-metas/frontend/src/components/BarChatRotaFamilia/index.tsx"],"names":["axios","useEffect","useState","Chart","getTokenData","getAuthData","BASE_URL","ReactBootStrap","BarChartRotaFamilia","loading","setLoading","labels","categories","series","name","data","chartData","setChartData","get","user_name","headers","Authorization","access_token","then","response","myLabels","map","x","tipo_bebida","mySeries","qtde_venda","options","plotOptions","bar","horizontal","xaxis"],"mappings":"yUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,OAASC,YAAT,KAA6B,YAA7B,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,iBAAhC,C,gGAaA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,eACAN,QAAQ,CAAC,KAAD,CADR,wCACvBO,OADuB,eACdC,UADc,8BAEIR,QAAQ,CAAY,CAClDS,MAAM,CAAE,CACJC,UAAU,CAAE,EADR,CAD0C,CAIlDC,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,EADV,CAEIC,IAAI,CAAE,EAFV,CADI,CAJ0C,CAAZ,CAFZ,yCAEvBC,SAFuB,eAEZC,YAFY,eAc9BhB,SAAS,CAAC,UAAM,mBACZD,KAAK,CAACkB,GAAN,WAAaZ,QAAb,2DAAwDF,YAAY,EAApE,wCAAwD,cAAgBe,SAAxE,EAAqF,CAAEC,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAYhB,WAAW,GAAGiB,YAA3C,CAAX,CAArF,EACKC,IADL,CACU,SAACC,QAAD,CAAc,CAChBd,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMK,CAAAA,IAAI,CAAGS,QAAQ,CAACT,IAAtB,CACA,GAAMU,CAAAA,QAAQ,CAAGV,IAAI,CAACW,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,WAAN,EAAV,CAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAGd,IAAI,CAACW,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACG,UAAN,EAAV,CAAjB,CAEAb,YAAY,CAAC,CACTN,MAAM,CAAE,CACJC,UAAU,CAAEa,QADR,CADC,CAITZ,MAAM,CAAE,CACJ,CACIC,IAAI,CAAE,QADV,CAEIC,IAAI,CAAEc,QAFV,CADI,CAJC,CAAD,CAAZ,CAWH,CAnBL,EAoBH,CArBQ,CAqBN,EArBM,CAAT,CAsBA,GAAME,CAAAA,OAAO,CAAG,CACZC,WAAW,CAAE,CACTC,GAAG,CAAE,CACDC,UAAU,CAAE,IADX,CADI,CADD,CAAhB,CAQA,mBACI,yBAEQzB,OAAO,eACH;AACA,KAAC,KAAD,EACI,OAAO,gCACAsB,OADA,MACSI,KAAK,CAAEnB,SAAS,CAACL,MAD1B,EADX,CAII,MAAM,CAAEK,SAAS,CAACH,MAJtB,CAKI,IAAI,CAAC,KALT,CAMI,MAAM,CAAC,KANX,EAFG,cAWH,YAAK,SAAS,CAAC,eAAf,uBACI,KAAC,cAAD,CAAgB,OAAhB,EAAwB,SAAS,CAAC,SAAlC,CAA4C,SAAS,CAAC,QAAtD,CAA+D,OAAO,CAAC,SAAvE,CAAiF,IAAI,CAAC,WAAtF,uBACI,aAAM,SAAS,CAAC,iBAAhB,wBADJ,EADJ,EAbZ,EADJ,CAsBH,CAlED,CAoEA,cAAeL,CAAAA,mBAAf","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { getTokenData } from 'utils/auth';\r\nimport { getAuthData } from 'utils/storage';\r\nimport { vendasTipoBebida } from '../../types/sales';\r\nimport { BASE_URL } from '../../utils/request';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\ntype Seriesdata = {\r\n    name: string;\r\n    data: number[];\r\n}\r\ntype Chartdata = {\r\n    labels: {\r\n        categories: String[];\r\n    };\r\n    series: Seriesdata[];\r\n}\r\n\r\nconst BarChartRotaFamilia = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [chartData, setChartData] = useState<Chartdata>({\r\n        labels: {\r\n            categories: []\r\n        },\r\n        series: [\r\n            {\r\n                name: \"\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    \r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/vendas/volume-tipo-bebida?rota=${getTokenData()?.user_name}`, { headers: { Authorization: \"Bearer \" + getAuthData().access_token } })\r\n            .then((response) => {\r\n                setLoading(true);\r\n\r\n                const data = response.data as vendasTipoBebida[];\r\n                const myLabels = data.map(x => x.tipo_bebida)\r\n                const mySeries = data.map(x => x.qtde_venda);\r\n\r\n                setChartData({\r\n                    labels: {\r\n                        categories: myLabels\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: \"Volume\",\r\n                            data: mySeries\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n    }, []);\r\n    const options = {\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? (\r\n                    // @ts-ignore\r\n                    <Chart\r\n                        options={{\r\n                            ...options, xaxis: chartData.labels\r\n                        }}\r\n                        series={chartData.series}\r\n                        type=\"bar\"\r\n                        height=\"240\"\r\n                    />\r\n                ) : (\r\n                    <div className='display-flex '>\r\n                        <ReactBootStrap.Spinner className='spinner' animation='border' variant='warning' role='status ml'>\r\n                            <span className='visually-hidden'>Loading...</span>\r\n                        </ReactBootStrap.Spinner>\r\n                    </div>\r\n                )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BarChartRotaFamilia;\r\n"]},"metadata":{},"sourceType":"module"}