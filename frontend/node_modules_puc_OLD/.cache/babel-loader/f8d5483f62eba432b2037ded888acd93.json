{"ast":null,"code":"import{format}from'date-fns';export var round=function round(value,precision){var multiplier=Math.pow(100,precision||0);return Math.round(value*multiplier);};export var formatLocalDate=function formatLocalDate(date,pattern){var dt=new Date(date);var dtDateOnly=new Date(dt.valueOf()+dt.getTimezoneOffset()*60*1000);return format(dtDateOnly,pattern);};export var formatPrice=function formatPrice(value){return new Intl.NumberFormat('pt-BR',{minimumFractionDigits:2,style:'currency',currency:'BRL'}).format(value);};","map":{"version":3,"sources":["C:/workspace/ws-sts/ulasoftware-metas/frontend/src/utils/format.ts"],"names":["format","round","value","precision","multiplier","Math","pow","formatLocalDate","date","pattern","dt","Date","dtDateOnly","valueOf","getTimezoneOffset","formatPrice","Intl","NumberFormat","minimumFractionDigits","style","currency"],"mappings":"AAAA,OAASA,MAAT,KAAuB,UAAvB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAgBC,SAAhB,CAAsC,CACvD,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,GAAL,CAAS,GAAT,CAAcH,SAAS,EAAI,CAA3B,CAAjB,CACA,MAAOE,CAAAA,IAAI,CAACJ,KAAL,CAAWC,KAAK,CAAGE,UAAnB,CAAP,CACH,CAHM,CAKP,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAeC,OAAf,CAAmC,CAC9D,GAAMC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,IAAJ,CAASH,IAAT,CAAX,CACA,GAAMI,CAAAA,UAAU,CAAG,GAAID,CAAAA,IAAJ,CAASD,EAAE,CAACG,OAAH,GAAeH,EAAE,CAACI,iBAAH,GAAyB,EAAzB,CAA8B,IAAtD,CAAnB,CACA,MAAOd,CAAAA,MAAM,CAACY,UAAD,CAAaH,OAAb,CAAb,CACH,CAJM,CAMP,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACb,KAAD,CAAmB,CAC1C,MAAO,IAAIc,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CAClCC,qBAAqB,CAAE,CADW,CAElCC,KAAK,CAAE,UAF2B,CAGlCC,QAAQ,CAAE,KAHwB,CAA/B,EAIJpB,MAJI,CAIGE,KAJH,CAAP,CAKH,CANM","sourcesContent":["import { format } from 'date-fns';\r\n\r\nexport const round = (value: number, precision: number) => {\r\n    var multiplier = Math.pow(100, precision || 0);\r\n    return Math.round(value * multiplier);\r\n}\r\n\r\nexport const formatLocalDate = (date: string, pattern: string) => {\r\n    const dt = new Date(date);\r\n    const dtDateOnly = new Date(dt.valueOf() + dt.getTimezoneOffset() * 60 * 1000);\r\n    return format(dtDateOnly, pattern);\r\n}\r\n\r\nexport const formatPrice = (value: number) => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n        minimumFractionDigits: 2,\r\n        style: 'currency',\r\n        currency: 'BRL'\r\n    }).format(value);\r\n};"]},"metadata":{},"sourceType":"module"}