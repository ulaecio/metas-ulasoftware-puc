{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\ws-sts\\\\ulasoftware-metas\\\\frontend\\\\src\\\\components\\\\BarChatSetorFamilia\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Chart from 'react-apexcharts';\nimport { useEffect, useState } from 'react';\nimport { BASE_URL } from '../../utils/request';\nimport axios from 'axios';\nimport { getAuthData } from 'utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChartSetorFamilia = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/vendas/volume-setor-tipo`, {\n      headers: {\n        Authorization: \"Bearer \" + getAuthData().access_token\n      }\n    }).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.tipo_bebida);\n      const mySeries = data.map(x => x.qtde_venda);\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"Volume\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(Chart, {\n      options: { ...options,\n        xaxis: chartData.labels\n      },\n      series: chartData.series,\n      type: \"bar\",\n      height: \"240\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(BarChartSetorFamilia, \"mJMs6XQzXfwSE+h9KE4K20U4AYI=\");\n\n_c = BarChartSetorFamilia;\nexport default BarChartSetorFamilia;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartSetorFamilia\");","map":{"version":3,"sources":["C:/workspace/ws-sts/ulasoftware-metas/frontend/src/components/BarChatSetorFamilia/index.tsx"],"names":["Chart","useEffect","useState","BASE_URL","axios","getAuthData","BarChartSetorFamilia","chartData","setChartData","labels","categories","series","name","data","get","headers","Authorization","access_token","then","response","myLabels","map","x","tipo_bebida","mySeries","qtde_venda","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAaA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAY;AAClDO,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KAD0C;AAIlDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI;AAJ0C,GAAZ,CAA1C;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEX,QAAS,2BAAtB,EAAkD;AAACY,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE,YAAYX,WAAW,GAAGY;AAA1C;AAAV,KAAlD,EACKC,IADL,CACWC,QAAD,IAAc;AAChB,YAAMN,IAAI,GAAGM,QAAQ,CAACN,IAAtB;AACA,YAAMO,QAAQ,GAAGP,IAAI,CAACQ,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,WAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGX,IAAI,CAACQ,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,UAAhB,CAAjB;AAEAjB,MAAAA,YAAY,CAAC;AACTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAEU;AADR,SADC;AAITT,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,QADV;AAEIC,UAAAA,IAAI,EAAEW;AAFV,SADI;AAJC,OAAD,CAAZ;AAWH,KAjBL;AAkBH,GAnBQ,EAmBN,EAnBM,CAAT;AAoBA,QAAME,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AAQA;AAAA;AACI;AACA,YAAC,KAAD;AACI,MAAA,OAAO,EAAE,EAAE,GAAGH,OAAL;AAAcI,QAAAA,KAAK,EAAEvB,SAAS,CAACE;AAA/B,OADb;AAEI,MAAA,MAAM,EAAEF,SAAS,CAACI,MAFtB;AAGI,MAAA,IAAI,EAAC,KAHT;AAII,MAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA;AAFJ;AASH,CAlDD;;GAAML,oB;;KAAAA,oB;AAoDN,eAAeA,oBAAf","sourcesContent":["import Chart from 'react-apexcharts';\r\nimport { useEffect, useState } from 'react';\r\nimport { volumeSetorTipoBebida } from '../../types/sales';\r\nimport { BASE_URL } from '../../utils/request';\r\nimport axios from 'axios';\r\nimport { getAuthData } from 'utils/storage';\r\n\r\ntype Seriesdata = {\r\n    name: string;\r\n    data: number[];\r\n}\r\ntype Chartdata = {\r\n    labels: {\r\n        categories: String[];\r\n    };\r\n    series: Seriesdata[];\r\n}\r\n\r\nconst BarChartSetorFamilia = () => {\r\n    const [chartData, setChartData] = useState<Chartdata>({\r\n        labels: {\r\n            categories: []\r\n        },\r\n        series: [\r\n            {\r\n                name: \"\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/vendas/volume-setor-tipo`, {headers: {Authorization: \"Bearer \" + getAuthData().access_token }})\r\n            .then((response) => {\r\n                const data = response.data as volumeSetorTipoBebida[];\r\n                const myLabels = data.map(x => x.tipo_bebida)\r\n                const mySeries = data.map(x => x.qtde_venda);\r\n\r\n                setChartData({\r\n                    labels: {\r\n                        categories: myLabels\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: \"Volume\",\r\n                            data: mySeries\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n    }, []);\r\n    const options = {\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        // @ts-ignore\r\n        <Chart\r\n            options={{ ...options, xaxis: chartData.labels }}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height=\"240\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default BarChartSetorFamilia;"]},"metadata":{},"sourceType":"module"}