{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\ws-sts\\\\metas-ulasoftware-puc\\\\frontend\\\\src\\\\pages\\\\Auth\\\\Login\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useLocation } from 'react-router';\nimport { requestBackendLogin } from 'utils/request';\nimport {\n/*getAuthData,*/\nsaveAuthData } from 'utils/storage';\nimport ButtonIcon from '../../../components/ButtonIcon';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const [hasError, setHasError] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const history = useHistory();\n  let location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: '/admin'\n    }\n  };\n\n  const onSubmit = formData => {\n    requestBackendLogin(formData).then(response => {\n      saveAuthData(response.data); // const tokenData = getAuthData(),\n\n      setHasError(false); // console.log('SUCESSO', response);\n\n      history.replace(from);\n    }).catch(error => {\n      setHasError(true); //console.log('ERRO', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" base-card text-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary text-center display-flex\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mb-2\",\n        children: \"Usu\\xE1rio ou senha inv\\xE1lido!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('username', {\n              required: '*Campo obrigatório'\n            }),\n            type: \"text\",\n            className: `form-control base-input ${errors.username ? 'is-invalid' : ''}`,\n            placeholder: \"Digite sua rota\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback d-block\",\n            children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('password', {\n              required: '*Campo obrigatório'\n            }),\n            type: \"password\",\n            className: `form-control base-input ${errors.password ? 'is-invalid' : ''}`,\n            placeholder: \"Senha. Exemplo: 111@1970\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"not-registered text-secondary text-info-senha\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"*A senha \\xE9 formada por numeros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback d-block\",\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"link\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-submit\",\n              children: [/*#__PURE__*/_jsxDEV(ButtonIcon, {\n                text: \"Fazer login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"not-registered\",\n                children: \"N\\xE3o tem cadastro?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"pJ6ZFo3/i4DF64SulhFx4BqrcMI=\", false, function () {\n  return [useForm, useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/workspace/ws-sts/metas-ulasoftware-puc/frontend/src/pages/Auth/Login/index.tsx"],"names":["useState","useForm","useHistory","useLocation","requestBackendLogin","saveAuthData","ButtonIcon","Login","hasError","setHasError","register","handleSubmit","formState","errors","history","location","from","state","pathname","onSubmit","formData","then","response","data","replace","catch","error","required","username","message","password"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { requestBackendLogin } from 'utils/request';\r\nimport { /*getAuthData,*/ saveAuthData } from 'utils/storage';\r\nimport ButtonIcon from '../../../components/ButtonIcon';\r\nimport './styles.css';\r\n\r\ntype FormData = {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\ntype LocationState = {\r\n    from: string;\r\n}\r\n\r\nconst Login = () => {\r\n    const [hasError, setHasError] = useState(false);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm<FormData>();\r\n\r\n    const history = useHistory();\r\n\r\n    let location = useLocation<LocationState>();\r\n\r\n    const { from } = location.state || { from: { pathname: '/admin' } };\r\n\r\n    const onSubmit = (formData: FormData) => {\r\n        requestBackendLogin(formData)\r\n            .then(response => {\r\n                saveAuthData(response.data)\r\n                // const tokenData = getAuthData(),\r\n                setHasError(false);\r\n                // console.log('SUCESSO', response);\r\n                history.replace(from);\r\n            })\r\n            .catch(error => {\r\n                setHasError(true)\r\n                //console.log('ERRO', error);\r\n            });\r\n    };\r\n    return (\r\n        <div className='container-login'>\r\n            <div className=' base-card text-center align-items-center'>\r\n                <h1 className='text-primary text-center display-flex'>\r\n                    Entrar</h1>\r\n                {hasError && (\r\n                    < div className='alert alert-danger mb-2'>\r\n                        Usuário ou senha inválido!\r\n                    </div>\r\n                )\r\n                }\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className='mb-4'>\r\n                        <input\r\n                            {...register('username', {\r\n                                required: '*Campo obrigatório'\r\n                            })}\r\n                            type='text'\r\n                            className={`form-control base-input ${errors.username ? 'is-invalid' : ''}`}\r\n                            placeholder='Digite sua rota'\r\n                            name='username'\r\n                        />\r\n                        <div className='invalid-feedback d-block'>{errors.username?.message}</div>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                        <input\r\n                            {...register('password', {\r\n                                required: '*Campo obrigatório'\r\n                            })}\r\n                            type='password'\r\n                            className={`form-control base-input ${errors.password ? 'is-invalid' : ''}`}\r\n                            placeholder='Senha. Exemplo: 111@1970'\r\n                            name='password'\r\n                        />\r\n                        <span className='not-registered text-secondary text-info-senha'>\r\n                            <i>*A senha é formada por numeros</i>.</span>\r\n                        <div className='invalid-feedback d-block'>{errors.password?.message}</div>\r\n                        <div>\r\n                            <link>\r\n                            </link>\r\n                            <div className='login-submit'>\r\n                                <ButtonIcon text='Fazer login' />\r\n                                <span className='not-registered'>Não tem cadastro?\r\n                                    {/* <a href=\"https://api.whatsapp.com/send?phone=+559891076037&text=Ol%C3%A1!%20N%C3%A3o%20consigo%20acessar%20minha%20rota%20no%20*Farol%20de%20Vendas*\" target=''>Clique aqui</a> */}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}