{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\ws-sts\\\\metas-ulasoftware-puc\\\\frontend\\\\src\\\\components\\\\DonutChart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\nimport { requestBackend, BASE_URL } from 'utils/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  _s();\n\n  //DADOS DINAMICOS\n  const [chartData, setChartData] = useState({\n    labels: [],\n    series: []\n  });\n  useEffect(() => {\n    requestBackend({\n      url: `${BASE_URL}/vendas/volume-vendas-setor`,\n      withCredentials: true\n    }).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.setor);\n      const mySeries = data.map(x => x.total_venda);\n      setChartData({\n        labels: myLabels,\n        series: mySeries\n      });\n    });\n  }, []);\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(Chart, {\n      options: { ...options,\n        labels: chartData.labels\n      },\n      series: chartData.series,\n      type: \"donut\",\n      height: \"240\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(DonutChart, \"aUQ8RMGL8CCZbUkZS1EfKr7vfts=\");\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["C:/workspace/ws-sts/metas-ulasoftware-puc/frontend/src/components/DonutChart/index.tsx"],"names":["useState","useEffect","Chart","requestBackend","BASE_URL","DonutChart","chartData","setChartData","labels","series","url","withCredentials","then","response","data","myLabels","map","x","setor","mySeries","total_venda","options","legend","show"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,eAAzC;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACzB;AACI,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAY;AAAEQ,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAZ,CAA1C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,cAAc,CAAC;AACXO,MAAAA,GAAG,EACE,GAAEN,QAAS,6BAFL;AAGXO,MAAAA,eAAe,EAAE;AAHN,KAAD,CAAd,CAKKC,IALL,CAKWC,QAAD,IAAc;AAChB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,KAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,WAAhB,CAAjB;AAEAb,MAAAA,YAAY,CAAC;AAAEC,QAAAA,MAAM,EAAEO,QAAV;AAAoBN,QAAAA,MAAM,EAAEU;AAA5B,OAAD,CAAZ;AACH,KAXL;AAYH,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAME,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAMA;AAAA;AACI;AACA,YAAC,KAAD;AACI,MAAA,OAAO,EAAE,EAAE,GAAGF,OAAL;AAAcb,QAAAA,MAAM,EAAEF,SAAS,CAACE;AAAhC,OADb;AAEI,MAAA,MAAM,EAAEF,SAAS,CAACG,MAFtB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA;AAFJ;AASH,CAlCD;;GAAMJ,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { vendasPorSetor } from 'types/sales';\r\nimport { requestBackend, BASE_URL } from 'utils/request';\r\n\r\ntype ChartData = {\r\n    labels: string[];\r\n    series: number[];\r\n}\r\n\r\nconst DonutChart = () => {\r\n//DADOS DINAMICOS\r\n    const [chartData, setChartData] = useState<ChartData>({ labels: [], series: [] });\r\n\r\n    useEffect(() => {\r\n        requestBackend({\r\n            url:\r\n                `${BASE_URL}/vendas/volume-vendas-setor`,\r\n            withCredentials: true\r\n        })\r\n            .then((response) => {\r\n                const data = response.data as vendasPorSetor[];\r\n                const myLabels = data.map(x => x.setor)\r\n                const mySeries = data.map(x => x.total_venda);\r\n\r\n                setChartData({ labels: myLabels, series: mySeries });\r\n            })\r\n    }, []);\r\n\r\n    const options = {\r\n        legend: {\r\n            show: true\r\n        }\r\n    }\r\n\r\n    return (\r\n        // @ts-ignore\r\n        <Chart\r\n            options={{ ...options, labels: chartData.labels }}\r\n            series={chartData.series}\r\n            type='donut'\r\n            height='240'\r\n        />\r\n    );\r\n}\r\n\r\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}